#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  (load #p"./cl-waffe2.asd")
  #+quicklisp(ql:quickload :cl-waffe2 :silent t)
  )

(defpackage :ros.script.cl-waffe2-test.3893644947
  (:use :cl))
(in-package :ros.script.cl-waffe2-test.3893644947)

;; delete it in the future.
#+sbcl(declaim (sb-ext:muffle-conditions cl:style-warning))
(defun main (&rest argv)
  ;; Usage ./cl-waffe2-test.ros <command> <backend>
  (cond
    ((equal (car argv) "gendoc")
     #+quicklisp(ql:quickload :cl-waffe2/docs :silent t)
     (cl-waffe2:set-devices-toplevel 'cl-waffe2/backends.lisp:LispTensor)
     (uiop:symbol-call :cl-waffe2.docs :generate))
    ;; [TODO] compile
    ((equal (car argv) "test")
     (cl-waffe2:set-devices-toplevel 'cl-waffe2/backends.lisp:LispTensor)
     (asdf:load-system :cl-waffe2/test)
     (apply #'uiop:symbol-call :cl-waffe2/tester :running-test (cdr argv))

     )))
;;; vim: set ft=lisp lisp:
